Paper review
学号：1160300527
  姓名：肖松      
== Paper summary ==
这篇论文对多种指令集进行了对比，从几个方面对各种桌面/服务器RISC指令集与嵌入式RISC指令集进行了对比，比如寻址模式，指令格式。然后对MIPS核心指令集，桌面/服务器RISC的多媒体扩展，嵌入式RISC的数字信号处理扩展等内容进行详细说明，介绍了MIPS核心的常见扩展以及10种指令集架构特有的功能，对另外3种架构进行了具体的介绍。最后叙述了指令集架构的发展趋势以及对未来发展趋势的预测。

== Strength of paper ==
内容充实且具体，数据详细，有说服力。将各种架构以表格形式形成对比，结果较为直观，且分别描述各种架构的特点

== Weakness of paper ==
开篇的Introduce并没有很好的概括文章的主要讲述的内容。论文内容较多但没有一个比较完善的目录，不便于反复阅读以及查找。

== Detailed comment ==
第一部分对10种精简指令集的概况进行了大致的介绍：有的指令集有巨大的市场空间，保持着优势，有的却已经逐渐消失。而IBM360/370则成为经典，它在60年代提出的标准（如按字节寻址等）甚至到今天依然适用。
第二部分：RISC划分为两类，一类是桌面和服务器的RISC，另一类是嵌入式的RISC。在该部分中对两类RISC进行了对比，讨论了他们的异同，并且以表格形式表示出来，如嵌入式RISC中通用寄存器的数量大多在8到16个间，桌面/服务器RISC则有32个通用寄存器，同时，指令的长度等内容也有所不同。与嵌入式RISC指令集相比，桌面/服务器RISC在寻址上更加简化。
第三部分：80x86并非是一开始就非常完美，而是逐渐在其基础上添加新的功能，一步步发展而来，并且随时代发展不断演进，从而有良好的向后兼容性。虽然80x86有很多应用实例，但是由于它是由各个部分组合而成，在不断演化中，它的理解难度越来越高。
第四部分:VAX架构是CISC架构，VAX指令集设计时的主要目标是：
（1）使指令集与编程语言尽量接近，以此简化编译器。
（2）为减小指令所占内存，VAX指令集中指令长度的可变。
因为VAX设计目的与MIPS不同，因此，最终的架构也就不同，在VAX于MIPS中，对于相同数据类型具有不同的名称。
第五部分：IBM360被提出时，首次使用计算机体系结构术语。IBM360的出现具有重大意义。它提出的目的是为了使相同软件在同一架构的不同机器上也能正常运行。显然，这是一个很正确的决定，并且为现代计算机的繁盛奠定了基础。同时，在IBM360架构中引入的几种标准一直使用到现在。

== Idea for improvement ==
开篇的Introduction可以对文章的内容进行大致概括。文章可以精简一部分。

== Lessons learned ==
从这篇论文中，我了解到了桌面/服务器RISC与嵌入式RISC的不同，并知道了几种代表性RISC的特有的指令集及功能。同时，每个指令集设计时都有各自的目的，不同目的驱使了不同指令集的诞生。在设计指令集时，应该首先考虑适用的场景以及主要目的，从而进行不同的权衡。
Paper review
学号：1160300527
  姓名：肖松      
== Paper summary ==
这篇论文对多种指令集进行了对比，从几个方面对各种桌面/服务器RISC指令集与嵌入式RISC指令集进行了对比，比如寻址模式，指令格式。然后对MIPS核心指令集，桌面/服务器RISC的多媒体扩展，嵌入式RISC的数字信号处理扩展等内容进行详细说明，介绍了MIPS核心的常见扩展以及10种指令集架构特有的功能，对另外3种架构进行了具体的介绍。最后叙述了指令集架构的发展趋势以及对未来发展趋势的预测。

== Strength of paper ==
内容充实且具体，数据详细，有说服力。将各种架构以表格形式形成对比，结果较为直观，且分别描述各种架构的特点

== Weakness of paper ==
开篇的Introduce并没有很好的概括文章的主要讲述的内容。论文内容较多但没有一个比较完善的目录，不便于反复阅读以及查找。

== Detailed comment ==
第一部分对10种精简指令集的概况进行了大致的介绍：有的指令集有巨大的市场空间，保持着优势，有的却已经逐渐消失。而IBM360/370则成为经典，它在60年代提出的标准（如按字节寻址等）甚至到今天依然适用。
第二部分：RISC划分为两类，一类是桌面和服务器的RISC，另一类是嵌入式的RISC。在该部分中对两类RISC进行了对比，讨论了他们的异同，并且以表格形式表示出来，如嵌入式RISC中通用寄存器的数量大多在8到16个间，桌面/服务器RISC则有32个通用寄存器，同时，指令的长度等内容也有所不同。与嵌入式RISC指令集相比，桌面/服务器RISC在寻址上更加简化。
第三部分：80x86并非是一开始就非常完美，而是逐渐在其基础上添加新的功能，一步步发展而来，并且随时代发展不断演进，从而有良好的向后兼容性。虽然80x86有很多应用实例，但是由于它是由各个部分组合而成，在不断演化中，它的理解难度越来越高。
第四部分:VAX架构是CISC架构，VAX指令集设计时的主要目标是：
（1）使指令集与编程语言尽量接近，以此简化编译器。
（2）为减小指令所占内存，VAX指令集中指令长度的可变。
因为VAX设计目的与MIPS不同，因此，最终的架构也就不同，在VAX于MIPS中，对于相同数据类型具有不同的名称。
第五部分：IBM360被提出时，首次使用计算机体系结构术语。IBM360的出现具有重大意义。它提出的目的是为了使相同软件在同一架构的不同机器上也能正常运行。显然，这是一个很正确的决定，并且为现代计算机的繁盛奠定了基础。同时，在IBM360架构中引入的几种标准一直使用到现在。

== Idea for improvement ==
开篇的Introduction可以对文章的内容进行大致概括。文章可以精简一部分。

== Lessons learned ==
从这篇论文中，我了解到了桌面/服务器RISC与嵌入式RISC的不同，并知道了几种代表性RISC的特有的指令集及功能。同时，每个指令集设计时都有各自的目的，不同目的驱使了不同指令集的诞生。在设计指令集时，应该首先考虑适用的场景以及主要目的，从而进行不同的权衡。
Paper review
学号：1160300527
  姓名：肖松      
== Paper summary ==
这篇论文对多种指令集进行了对比，从几个方面对各种桌面/服务器RISC指令集与嵌入式RISC指令集进行了对比，比如寻址模式，指令格式。然后对MIPS核心指令集，桌面/服务器RISC的多媒体扩展，嵌入式RISC的数字信号处理扩展等内容进行详细说明，介绍了MIPS核心的常见扩展以及10种指令集架构特有的功能，对另外3种架构进行了具体的介绍。最后叙述了指令集架构的发展趋势以及对未来发展趋势的预测。

== Strength of paper ==
内容充实且具体，数据详细，有说服力。将各种架构以表格形式形成对比，结果较为直观，且分别描述各种架构的特点

== Weakness of paper ==
开篇的Introduce并没有很好的概括文章的主要讲述的内容。论文内容较多但没有一个比较完善的目录，不便于反复阅读以及查找。

== Detailed comment ==
第一部分对10种精简指令集的概况进行了大致的介绍：有的指令集有巨大的市场空间，保持着优势，有的却已经逐渐消失。而IBM360/370则成为经典，它在60年代提出的标准（如按字节寻址等）甚至到今天依然适用。
第二部分：RISC划分为两类，一类是桌面和服务器的RISC，另一类是嵌入式的RISC。在该部分中对两类RISC进行了对比，讨论了他们的异同，并且以表格形式表示出来，如嵌入式RISC中通用寄存器的数量大多在8到16个间，桌面/服务器RISC则有32个通用寄存器，同时，指令的长度等内容也有所不同。与嵌入式RISC指令集相比，桌面/服务器RISC在寻址上更加简化。
第三部分：80x86并非是一开始就非常完美，而是逐渐在其基础上添加新的功能，一步步发展而来，并且随时代发展不断演进，从而有良好的向后兼容性。虽然80x86有很多应用实例，但是由于它是由各个部分组合而成，在不断演化中，它的理解难度越来越高。
第四部分:VAX架构是CISC架构，VAX指令集设计时的主要目标是：
（1）使指令集与编程语言尽量接近，以此简化编译器。
（2）为减小指令所占内存，VAX指令集中指令长度的可变。
因为VAX设计目的与MIPS不同，因此，最终的架构也就不同，在VAX于MIPS中，对于相同数据类型具有不同的名称。
第五部分：IBM360被提出时，首次使用计算机体系结构术语。IBM360的出现具有重大意义。它提出的目的是为了使相同软件在同一架构的不同机器上也能正常运行。显然，这是一个很正确的决定，并且为现代计算机的繁盛奠定了基础。同时，在IBM360架构中引入的几种标准一直使用到现在。

== Idea for improvement ==
开篇的Introduction可以对文章的内容进行大致概括。文章可以精简一部分。

== Lessons learned ==
从这篇论文中，我了解到了桌面/服务器RISC与嵌入式RISC的不同，并知道了几种代表性RISC的特有的指令集及功能。同时，每个指令集设计时都有各自的目的，不同目的驱使了不同指令集的诞生。在设计指令集时，应该首先考虑适用的场景以及主要目的，从而进行不同的权衡。
Paper review
学号：1160300527
  姓名：肖松      
== Paper summary ==
这篇论文对多种指令集进行了对比，从几个方面对各种桌面/服务器RISC指令集与嵌入式RISC指令集进行了对比，比如寻址模式，指令格式。然后对MIPS核心指令集，桌面/服务器RISC的多媒体扩展，嵌入式RISC的数字信号处理扩展等内容进行详细说明，介绍了MIPS核心的常见扩展以及10种指令集架构特有的功能，对另外3种架构进行了具体的介绍。最后叙述了指令集架构的发展趋势以及对未来发展趋势的预测。

== Strength of paper ==
内容充实且具体，数据详细，有说服力。将各种架构以表格形式形成对比，结果较为直观，且分别描述各种架构的特点

== Weakness of paper ==
开篇的Introduce并没有很好的概括文章的主要讲述的内容。论文内容较多但没有一个比较完善的目录，不便于反复阅读以及查找。

== Detailed comment ==
第一部分对10种精简指令集的概况进行了大致的介绍：有的指令集有巨大的市场空间，保持着优势，有的却已经逐渐消失。而IBM360/370则成为经典，它在60年代提出的标准（如按字节寻址等）甚至到今天依然适用。
第二部分：RISC划分为两类，一类是桌面和服务器的RISC，另一类是嵌入式的RISC。在该部分中对两类RISC进行了对比，讨论了他们的异同，并且以表格形式表示出来，如嵌入式RISC中通用寄存器的数量大多在8到16个间，桌面/服务器RISC则有32个通用寄存器，同时，指令的长度等内容也有所不同。与嵌入式RISC指令集相比，桌面/服务器RISC在寻址上更加简化。
第三部分：80x86并非是一开始就非常完美，而是逐渐在其基础上添加新的功能，一步步发展而来，并且随时代发展不断演进，从而有良好的向后兼容性。虽然80x86有很多应用实例，但是由于它是由各个部分组合而成，在不断演化中，它的理解难度越来越高。
第四部分:VAX架构是CISC架构，VAX指令集设计时的主要目标是：
（1）使指令集与编程语言尽量接近，以此简化编译器。
（2）为减小指令所占内存，VAX指令集中指令长度的可变。
因为VAX设计目的与MIPS不同，因此，最终的架构也就不同，在VAX于MIPS中，对于相同数据类型具有不同的名称。
第五部分：IBM360被提出时，首次使用计算机体系结构术语。IBM360的出现具有重大意义。它提出的目的是为了使相同软件在同一架构的不同机器上也能正常运行。显然，这是一个很正确的决定，并且为现代计算机的繁盛奠定了基础。同时，在IBM360架构中引入的几种标准一直使用到现在。

== Idea for improvement ==
开篇的Introduction可以对文章的内容进行大致概括。文章可以精简一部分。

== Lessons learned ==
从这篇论文中，我了解到了桌面/服务器RISC与嵌入式RISC的不同，并知道了几种代表性RISC的特有的指令集及功能。同时，每个指令集设计时都有各自的目的，不同目的驱使了不同指令集的诞生。在设计指令集时，应该首先考虑适用的场景以及主要目的，从而进行不同的权衡。
Paper review
学号：1160300527
  姓名：肖松      
== Paper summary ==
这篇论文对多种指令集进行了对比，从几个方面对各种桌面/服务器RISC指令集与嵌入式RISC指令集进行了对比，比如寻址模式，指令格式。然后对MIPS核心指令集，桌面/服务器RISC的多媒体扩展，嵌入式RISC的数字信号处理扩展等内容进行详细说明，介绍了MIPS核心的常见扩展以及10种指令集架构特有的功能，对另外3种架构进行了具体的介绍。最后叙述了指令集架构的发展趋势以及对未来发展趋势的预测。

== Strength of paper ==
内容充实且具体，数据详细，有说服力。将各种架构以表格形式形成对比，结果较为直观，且分别描述各种架构的特点

== Weakness of paper ==
开篇的Introduce并没有很好的概括文章的主要讲述的内容。论文内容较多但没有一个比较完善的目录，不便于反复阅读以及查找。

== Detailed comment ==
第一部分对10种精简指令集的概况进行了大致的介绍：有的指令集有巨大的市场空间，保持着优势，有的却已经逐渐消失。而IBM360/370则成为经典，它在60年代提出的标准（如按字节寻址等）甚至到今天依然适用。
第二部分：RISC划分为两类，一类是桌面和服务器的RISC，另一类是嵌入式的RISC。在该部分中对两类RISC进行了对比，讨论了他们的异同，并且以表格形式表示出来，如嵌入式RISC中通用寄存器的数量大多在8到16个间，桌面/服务器RISC则有32个通用寄存器，同时，指令的长度等内容也有所不同。与嵌入式RISC指令集相比，桌面/服务器RISC在寻址上更加简化。
第三部分：80x86并非是一开始就非常完美，而是逐渐在其基础上添加新的功能，一步步发展而来，并且随时代发展不断演进，从而有良好的向后兼容性。虽然80x86有很多应用实例，但是由于它是由各个部分组合而成，在不断演化中，它的理解难度越来越高。
第四部分:VAX架构是CISC架构，VAX指令集设计时的主要目标是：
（1）使指令集与编程语言尽量接近，以此简化编译器。
（2）为减小指令所占内存，VAX指令集中指令长度的可变。
因为VAX设计目的与MIPS不同，因此，最终的架构也就不同，在VAX于MIPS中，对于相同数据类型具有不同的名称。
第五部分：IBM360被提出时，首次使用计算机体系结构术语。IBM360的出现具有重大意义。它提出的目的是为了使相同软件在同一架构的不同机器上也能正常运行。显然，这是一个很正确的决定，并且为现代计算机的繁盛奠定了基础。同时，在IBM360架构中引入的几种标准一直使用到现在。

== Idea for improvement ==
开篇的Introduction可以对文章的内容进行大致概括。文章可以精简一部分。

== Lessons learned ==
从这篇论文中，我了解到了桌面/服务器RISC与嵌入式RISC的不同，并知道了几种代表性RISC的特有的指令集及功能。同时，每个指令集设计时都有各自的目的，不同目的驱使了不同指令集的诞生。在设计指令集时，应该首先考虑适用的场景以及主要目的，从而进行不同的权衡。
Paper review
学号：1160300527
  姓名：肖松      
== Paper summary ==
这篇论文对多种指令集进行了对比，从几个方面对各种桌面/服务器RISC指令集与嵌入式RISC指令集进行了对比，比如寻址模式，指令格式。然后对MIPS核心指令集，桌面/服务器RISC的多媒体扩展，嵌入式RISC的数字信号处理扩展等内容进行详细说明，介绍了MIPS核心的常见扩展以及10种指令集架构特有的功能，对另外3种架构进行了具体的介绍。最后叙述了指令集架构的发展趋势以及对未来发展趋势的预测。

== Strength of paper ==
内容充实且具体，数据详细，有说服力。将各种架构以表格形式形成对比，结果较为直观，且分别描述各种架构的特点

== Weakness of paper ==
开篇的Introduce并没有很好的概括文章的主要讲述的内容。论文内容较多但没有一个比较完善的目录，不便于反复阅读以及查找。

== Detailed comment ==
第一部分对10种精简指令集的概况进行了大致的介绍：有的指令集有巨大的市场空间，保持着优势，有的却已经逐渐消失。而IBM360/370则成为经典，它在60年代提出的标准（如按字节寻址等）甚至到今天依然适用。
第二部分：RISC划分为两类，一类是桌面和服务器的RISC，另一类是嵌入式的RISC。在该部分中对两类RISC进行了对比，讨论了他们的异同，并且以表格形式表示出来，如嵌入式RISC中通用寄存器的数量大多在8到16个间，桌面/服务器RISC则有32个通用寄存器，同时，指令的长度等内容也有所不同。与嵌入式RISC指令集相比，桌面/服务器RISC在寻址上更加简化。
第三部分：80x86并非是一开始就非常完美，而是逐渐在其基础上添加新的功能，一步步发展而来，并且随时代发展不断演进，从而有良好的向后兼容性。虽然80x86有很多应用实例，但是由于它是由各个部分组合而成，在不断演化中，它的理解难度越来越高。
第四部分:VAX架构是CISC架构，VAX指令集设计时的主要目标是：
（1）使指令集与编程语言尽量接近，以此简化编译器。
（2）为减小指令所占内存，VAX指令集中指令长度的可变。
因为VAX设计目的与MIPS不同，因此，最终的架构也就不同，在VAX于MIPS中，对于相同数据类型具有不同的名称。
第五部分：IBM360被提出时，首次使用计算机体系结构术语。IBM360的出现具有重大意义。它提出的目的是为了使相同软件在同一架构的不同机器上也能正常运行。显然，这是一个很正确的决定，并且为现代计算机的繁盛奠定了基础。同时，在IBM360架构中引入的几种标准一直使用到现在。

== Idea for improvement ==
开篇的Introduction可以对文章的内容进行大致概括。文章可以精简一部分。

== Lessons learned ==
从这篇论文中，我了解到了桌面/服务器RISC与嵌入式RISC的不同，并知道了几种代表性RISC的特有的指令集及功能。同时，每个指令集设计时都有各自的目的，不同目的驱使了不同指令集的诞生。在设计指令集时，应该首先考虑适用的场景以及主要目的，从而进行不同的权衡。
Paper review
学号：1160300527
  姓名：肖松      
== Paper summary ==
这篇论文对多种指令集进行了对比，从几个方面对各种桌面/服务器RISC指令集与嵌入式RISC指令集进行了对比，比如寻址模式，指令格式。然后对MIPS核心指令集，桌面/服务器RISC的多媒体扩展，嵌入式RISC的数字信号处理扩展等内容进行详细说明，介绍了MIPS核心的常见扩展以及10种指令集架构特有的功能，对另外3种架构进行了具体的介绍。最后叙述了指令集架构的发展趋势以及对未来发展趋势的预测。

== Strength of paper ==
内容充实且具体，数据详细，有说服力。将各种架构以表格形式形成对比，结果较为直观，且分别描述各种架构的特点

== Weakness of paper ==
开篇的Introduce并没有很好的概括文章的主要讲述的内容。论文内容较多但没有一个比较完善的目录，不便于反复阅读以及查找。

== Detailed comment ==
第一部分对10种精简指令集的概况进行了大致的介绍：有的指令集有巨大的市场空间，保持着优势，有的却已经逐渐消失。而IBM360/370则成为经典，它在60年代提出的标准（如按字节寻址等）甚至到今天依然适用。
第二部分：RISC划分为两类，一类是桌面和服务器的RISC，另一类是嵌入式的RISC。在该部分中对两类RISC进行了对比，讨论了他们的异同，并且以表格形式表示出来，如嵌入式RISC中通用寄存器的数量大多在8到16个间，桌面/服务器RISC则有32个通用寄存器，同时，指令的长度等内容也有所不同。与嵌入式RISC指令集相比，桌面/服务器RISC在寻址上更加简化。
第三部分：80x86并非是一开始就非常完美，而是逐渐在其基础上添加新的功能，一步步发展而来，并且随时代发展不断演进，从而有良好的向后兼容性。虽然80x86有很多应用实例，但是由于它是由各个部分组合而成，在不断演化中，它的理解难度越来越高。
第四部分:VAX架构是CISC架构，VAX指令集设计时的主要目标是：
（1）使指令集与编程语言尽量接近，以此简化编译器。
（2）为减小指令所占内存，VAX指令集中指令长度的可变。
因为VAX设计目的与MIPS不同，因此，最终的架构也就不同，在VAX于MIPS中，对于相同数据类型具有不同的名称。
第五部分：IBM360被提出时，首次使用计算机体系结构术语。IBM360的出现具有重大意义。它提出的目的是为了使相同软件在同一架构的不同机器上也能正常运行。显然，这是一个很正确的决定，并且为现代计算机的繁盛奠定了基础。同时，在IBM360架构中引入的几种标准一直使用到现在。

== Idea for improvement ==
开篇的Introduction可以对文章的内容进行大致概括。文章可以精简一部分。

== Lessons learned ==
从这篇论文中，我了解到了桌面/服务器RISC与嵌入式RISC的不同，并知道了几种代表性RISC的特有的指令集及功能。同时，每个指令集设计时都有各自的目的，不同目的驱使了不同指令集的诞生。在设计指令集时，应该首先考虑适用的场景以及主要目的，从而进行不同的权衡。
Paper review
学号：1160300527
  姓名：肖松      
== Paper summary ==
这篇论文对多种指令集进行了对比，从几个方面对各种桌面/服务器RISC指令集与嵌入式RISC指令集进行了对比，比如寻址模式，指令格式。然后对MIPS核心指令集，桌面/服务器RISC的多媒体扩展，嵌入式RISC的数字信号处理扩展等内容进行详细说明，介绍了MIPS核心的常见扩展以及10种指令集架构特有的功能，对另外3种架构进行了具体的介绍。最后叙述了指令集架构的发展趋势以及对未来发展趋势的预测。

== Strength of paper ==
内容充实且具体，数据详细，有说服力。将各种架构以表格形式形成对比，结果较为直观，且分别描述各种架构的特点

== Weakness of paper ==
开篇的Introduce并没有很好的概括文章的主要讲述的内容。论文内容较多但没有一个比较完善的目录，不便于反复阅读以及查找。

== Detailed comment ==
第一部分对10种精简指令集的概况进行了大致的介绍：有的指令集有巨大的市场空间，保持着优势，有的却已经逐渐消失。而IBM360/370则成为经典，它在60年代提出的标准（如按字节寻址等）甚至到今天依然适用。
第二部分：RISC划分为两类，一类是桌面和服务器的RISC，另一类是嵌入式的RISC。在该部分中对两类RISC进行了对比，讨论了他们的异同，并且以表格形式表示出来，如嵌入式RISC中通用寄存器的数量大多在8到16个间，桌面/服务器RISC则有32个通用寄存器，同时，指令的长度等内容也有所不同。与嵌入式RISC指令集相比，桌面/服务器RISC在寻址上更加简化。
第三部分：80x86并非是一开始就非常完美，而是逐渐在其基础上添加新的功能，一步步发展而来，并且随时代发展不断演进，从而有良好的向后兼容性。虽然80x86有很多应用实例，但是由于它是由各个部分组合而成，在不断演化中，它的理解难度越来越高。
第四部分:VAX架构是CISC架构，VAX指令集设计时的主要目标是：
（1）使指令集与编程语言尽量接近，以此简化编译器。
（2）为减小指令所占内存，VAX指令集中指令长度的可变。
因为VAX设计目的与MIPS不同，因此，最终的架构也就不同，在VAX于MIPS中，对于相同数据类型具有不同的名称。
第五部分：IBM360被提出时，首次使用计算机体系结构术语。IBM360的出现具有重大意义。它提出的目的是为了使相同软件在同一架构的不同机器上也能正常运行。显然，这是一个很正确的决定，并且为现代计算机的繁盛奠定了基础。同时，在IBM360架构中引入的几种标准一直使用到现在。

== Idea for improvement ==
开篇的Introduction可以对文章的内容进行大致概括。文章可以精简一部分。

== Lessons learned ==
从这篇论文中，我了解到了桌面/服务器RISC与嵌入式RISC的不同，并知道了几种代表性RISC的特有的指令集及功能。同时，每个指令集设计时都有各自的目的，不同目的驱使了不同指令集的诞生。在设计指令集时，应该首先考虑适用的场景以及主要目的，从而进行不同的权衡。
Paper review
学号：1160300527
  姓名：肖松      
== Paper summary ==
这篇论文对多种指令集进行了对比，从几个方面对各种桌面/服务器RISC指令集与嵌入式RISC指令集进行了对比，比如寻址模式，指令格式。然后对MIPS核心指令集，桌面/服务器RISC的多媒体扩展，嵌入式RISC的数字信号处理扩展等内容进行详细说明，介绍了MIPS核心的常见扩展以及10种指令集架构特有的功能，对另外3种架构进行了具体的介绍。最后叙述了指令集架构的发展趋势以及对未来发展趋势的预测。

== Strength of paper ==
内容充实且具体，数据详细，有说服力。将各种架构以表格形式形成对比，结果较为直观，且分别描述各种架构的特点

== Weakness of paper ==
开篇的Introduce并没有很好的概括文章的主要讲述的内容。论文内容较多但没有一个比较完善的目录，不便于反复阅读以及查找。

== Detailed comment ==
第一部分对10种精简指令集的概况进行了大致的介绍：有的指令集有巨大的市场空间，保持着优势，有的却已经逐渐消失。而IBM360/370则成为经典，它在60年代提出的标准（如按字节寻址等）甚至到今天依然适用。
第二部分：RISC划分为两类，一类是桌面和服务器的RISC，另一类是嵌入式的RISC。在该部分中对两类RISC进行了对比，讨论了他们的异同，并且以表格形式表示出来，如嵌入式RISC中通用寄存器的数量大多在8到16个间，桌面/服务器RISC则有32个通用寄存器，同时，指令的长度等内容也有所不同。与嵌入式RISC指令集相比，桌面/服务器RISC在寻址上更加简化。
第三部分：80x86并非是一开始就非常完美，而是逐渐在其基础上添加新的功能，一步步发展而来，并且随时代发展不断演进，从而有良好的向后兼容性。虽然80x86有很多应用实例，但是由于它是由各个部分组合而成，在不断演化中，它的理解难度越来越高。
第四部分:VAX架构是CISC架构，VAX指令集设计时的主要目标是：
（1）使指令集与编程语言尽量接近，以此简化编译器。
（2）为减小指令所占内存，VAX指令集中指令长度的可变。
因为VAX设计目的与MIPS不同，因此，最终的架构也就不同，在VAX于MIPS中，对于相同数据类型具有不同的名称。
第五部分：IBM360被提出时，首次使用计算机体系结构术语。IBM360的出现具有重大意义。它提出的目的是为了使相同软件在同一架构的不同机器上也能正常运行。显然，这是一个很正确的决定，并且为现代计算机的繁盛奠定了基础。同时，在IBM360架构中引入的几种标准一直使用到现在。

== Idea for improvement ==
开篇的Introduction可以对文章的内容进行大致概括。文章可以精简一部分。

== Lessons learned ==
从这篇论文中，我了解到了桌面/服务器RISC与嵌入式RISC的不同，并知道了几种代表性RISC的特有的指令集及功能。同时，每个指令集设计时都有各自的目的，不同目的驱使了不同指令集的诞生。在设计指令集时，应该首先考虑适用的场景以及主要目的，从而进行不同的权衡。
Paper review
学号：1160300527
  姓名：肖松      
== Paper summary ==
这篇论文对多种指令集进行了对比，从几个方面对各种桌面/服务器RISC指令集与嵌入式RISC指令集进行了对比，比如寻址模式，指令格式。然后对MIPS核心指令集，桌面/服务器RISC的多媒体扩展，嵌入式RISC的数字信号处理扩展等内容进行详细说明，介绍了MIPS核心的常见扩展以及10种指令集架构特有的功能，对另外3种架构进行了具体的介绍。最后叙述了指令集架构的发展趋势以及对未来发展趋势的预测。

== Strength of paper ==
内容充实且具体，数据详细，有说服力。将各种架构以表格形式形成对比，结果较为直观，且分别描述各种架构的特点

== Weakness of paper ==
开篇的Introduce并没有很好的概括文章的主要讲述的内容。论文内容较多但没有一个比较完善的目录，不便于反复阅读以及查找。

== Detailed comment ==
第一部分对10种精简指令集的概况进行了大致的介绍：有的指令集有巨大的市场空间，保持着优势，有的却已经逐渐消失。而IBM360/370则成为经典，它在60年代提出的标准（如按字节寻址等）甚至到今天依然适用。
第二部分：RISC划分为两类，一类是桌面和服务器的RISC，另一类是嵌入式的RISC。在该部分中对两类RISC进行了对比，讨论了他们的异同，并且以表格形式表示出来，如嵌入式RISC中通用寄存器的数量大多在8到16个间，桌面/服务器RISC则有32个通用寄存器，同时，指令的长度等内容也有所不同。与嵌入式RISC指令集相比，桌面/服务器RISC在寻址上更加简化。
第三部分：80x86并非是一开始就非常完美，而是逐渐在其基础上添加新的功能，一步步发展而来，并且随时代发展不断演进，从而有良好的向后兼容性。虽然80x86有很多应用实例，但是由于它是由各个部分组合而成，在不断演化中，它的理解难度越来越高。
第四部分:VAX架构是CISC架构，VAX指令集设计时的主要目标是：
（1）使指令集与编程语言尽量接近，以此简化编译器。
（2）为减小指令所占内存，VAX指令集中指令长度的可变。
因为VAX设计目的与MIPS不同，因此，最终的架构也就不同，在VAX于MIPS中，对于相同数据类型具有不同的名称。
第五部分：IBM360被提出时，首次使用计算机体系结构术语。IBM360的出现具有重大意义。它提出的目的是为了使相同软件在同一架构的不同机器上也能正常运行。显然，这是一个很正确的决定，并且为现代计算机的繁盛奠定了基础。同时，在IBM360架构中引入的几种标准一直使用到现在。

== Idea for improvement ==
开篇的Introduction可以对文章的内容进行大致概括。文章可以精简一部分。

== Lessons learned ==
从这篇论文中，我了解到了桌面/服务器RISC与嵌入式RISC的不同，并知道了几种代表性RISC的特有的指令集及功能。同时，每个指令集设计时都有各自的目的，不同目的驱使了不同指令集的诞生。在设计指令集时，应该首先考虑适用的场景以及主要目的，从而进行不同的权衡。
Paper review
学号：1160300527
  姓名：肖松      
== Paper summary ==
这篇论文对多种指令集进行了对比，从几个方面对各种桌面/服务器RISC指令集与嵌入式RISC指令集进行了对比，比如寻址模式，指令格式。然后对MIPS核心指令集，桌面/服务器RISC的多媒体扩展，嵌入式RISC的数字信号处理扩展等内容进行详细说明，介绍了MIPS核心的常见扩展以及10种指令集架构特有的功能，对另外3种架构进行了具体的介绍。最后叙述了指令集架构的发展趋势以及对未来发展趋势的预测。

== Strength of paper ==
内容充实且具体，数据详细，有说服力。将各种架构以表格形式形成对比，结果较为直观，且分别描述各种架构的特点

== Weakness of paper ==
开篇的Introduce并没有很好的概括文章的主要讲述的内容。论文内容较多但没有一个比较完善的目录，不便于反复阅读以及查找。

== Detailed comment ==
第一部分对10种精简指令集的概况进行了大致的介绍：有的指令集有巨大的市场空间，保持着优势，有的却已经逐渐消失。而IBM360/370则成为经典，它在60年代提出的标准（如按字节寻址等）甚至到今天依然适用。
第二部分：RISC划分为两类，一类是桌面和服务器的RISC，另一类是嵌入式的RISC。在该部分中对两类RISC进行了对比，讨论了他们的异同，并且以表格形式表示出来，如嵌入式RISC中通用寄存器的数量大多在8到16个间，桌面/服务器RISC则有32个通用寄存器，同时，指令的长度等内容也有所不同。与嵌入式RISC指令集相比，桌面/服务器RISC在寻址上更加简化。
第三部分：80x86并非是一开始就非常完美，而是逐渐在其基础上添加新的功能，一步步发展而来，并且随时代发展不断演进，从而有良好的向后兼容性。虽然80x86有很多应用实例，但是由于它是由各个部分组合而成，在不断演化中，它的理解难度越来越高。
第四部分:VAX架构是CISC架构，VAX指令集设计时的主要目标是：
（1）使指令集与编程语言尽量接近，以此简化编译器。
（2）为减小指令所占内存，VAX指令集中指令长度的可变。
因为VAX设计目的与MIPS不同，因此，最终的架构也就不同，在VAX于MIPS中，对于相同数据类型具有不同的名称。
第五部分：IBM360被提出时，首次使用计算机体系结构术语。IBM360的出现具有重大意义。它提出的目的是为了使相同软件在同一架构的不同机器上也能正常运行。显然，这是一个很正确的决定，并且为现代计算机的繁盛奠定了基础。同时，在IBM360架构中引入的几种标准一直使用到现在。

== Idea for improvement ==
开篇的Introduction可以对文章的内容进行大致概括。文章可以精简一部分。

== Lessons learned ==
从这篇论文中，我了解到了桌面/服务器RISC与嵌入式RISC的不同，并知道了几种代表性RISC的特有的指令集及功能。同时，每个指令集设计时都有各自的目的，不同目的驱使了不同指令集的诞生。在设计指令集时，应该首先考虑适用的场景以及主要目的，从而进行不同的权衡。
Paper review
学号：1160300527
  姓名：肖松      
== Paper summary ==
这篇论文对多种指令集进行了对比，从几个方面对各种桌面/服务器RISC指令集与嵌入式RISC指令集进行了对比，比如寻址模式，指令格式。然后对MIPS核心指令集，桌面/服务器RISC的多媒体扩展，嵌入式RISC的数字信号处理扩展等内容进行详细说明，介绍了MIPS核心的常见扩展以及10种指令集架构特有的功能，对另外3种架构进行了具体的介绍。最后叙述了指令集架构的发展趋势以及对未来发展趋势的预测。

== Strength of paper ==
内容充实且具体，数据详细，有说服力。将各种架构以表格形式形成对比，结果较为直观，且分别描述各种架构的特点

== Weakness of paper ==
开篇的Introduce并没有很好的概括文章的主要讲述的内容。论文内容较多但没有一个比较完善的目录，不便于反复阅读以及查找。

== Detailed comment ==
第一部分对10种精简指令集的概况进行了大致的介绍：有的指令集有巨大的市场空间，保持着优势，有的却已经逐渐消失。而IBM360/370则成为经典，它在60年代提出的标准（如按字节寻址等）甚至到今天依然适用。
第二部分：RISC划分为两类，一类是桌面和服务器的RISC，另一类是嵌入式的RISC。在该部分中对两类RISC进行了对比，讨论了他们的异同，并且以表格形式表示出来，如嵌入式RISC中通用寄存器的数量大多在8到16个间，桌面/服务器RISC则有32个通用寄存器，同时，指令的长度等内容也有所不同。与嵌入式RISC指令集相比，桌面/服务器RISC在寻址上更加简化。
第三部分：80x86并非是一开始就非常完美，而是逐渐在其基础上添加新的功能，一步步发展而来，并且随时代发展不断演进，从而有良好的向后兼容性。虽然80x86有很多应用实例，但是由于它是由各个部分组合而成，在不断演化中，它的理解难度越来越高。
第四部分:VAX架构是CISC架构，VAX指令集设计时的主要目标是：
（1）使指令集与编程语言尽量接近，以此简化编译器。
（2）为减小指令所占内存，VAX指令集中指令长度的可变。
因为VAX设计目的与MIPS不同，因此，最终的架构也就不同，在VAX于MIPS中，对于相同数据类型具有不同的名称。
第五部分：IBM360被提出时，首次使用计算机体系结构术语。IBM360的出现具有重大意义。它提出的目的是为了使相同软件在同一架构的不同机器上也能正常运行。显然，这是一个很正确的决定，并且为现代计算机的繁盛奠定了基础。同时，在IBM360架构中引入的几种标准一直使用到现在。

== Idea for improvement ==
开篇的Introduction可以对文章的内容进行大致概括。文章可以精简一部分。

== Lessons learned ==
从这篇论文中，我了解到了桌面/服务器RISC与嵌入式RISC的不同，并知道了几种代表性RISC的特有的指令集及功能。同时，每个指令集设计时都有各自的目的，不同目的驱使了不同指令集的诞生。在设计指令集时，应该首先考虑适用的场景以及主要目的，从而进行不同的权衡。
Paper review
学号：1160300527
  姓名：肖松      
== Paper summary ==
这篇论文对多种指令集进行了对比，从几个方面对各种桌面/服务器RISC指令集与嵌入式RISC指令集进行了对比，比如寻址模式，指令格式。然后对MIPS核心指令集，桌面/服务器RISC的多媒体扩展，嵌入式RISC的数字信号处理扩展等内容进行详细说明，介绍了MIPS核心的常见扩展以及10种指令集架构特有的功能，对另外3种架构进行了具体的介绍。最后叙述了指令集架构的发展趋势以及对未来发展趋势的预测。

== Strength of paper ==
内容充实且具体，数据详细，有说服力。将各种架构以表格形式形成对比，结果较为直观，且分别描述各种架构的特点

== Weakness of paper ==
开篇的Introduce并没有很好的概括文章的主要讲述的内容。论文内容较多但没有一个比较完善的目录，不便于反复阅读以及查找。

== Detailed comment ==
第一部分对10种精简指令集的概况进行了大致的介绍：有的指令集有巨大的市场空间，保持着优势，有的却已经逐渐消失。而IBM360/370则成为经典，它在60年代提出的标准（如按字节寻址等）甚至到今天依然适用。
第二部分：RISC划分为两类，一类是桌面和服务器的RISC，另一类是嵌入式的RISC。在该部分中对两类RISC进行了对比，讨论了他们的异同，并且以表格形式表示出来，如嵌入式RISC中通用寄存器的数量大多在8到16个间，桌面/服务器RISC则有32个通用寄存器，同时，指令的长度等内容也有所不同。与嵌入式RISC指令集相比，桌面/服务器RISC在寻址上更加简化。
第三部分：80x86并非是一开始就非常完美，而是逐渐在其基础上添加新的功能，一步步发展而来，并且随时代发展不断演进，从而有良好的向后兼容性。虽然80x86有很多应用实例，但是由于它是由各个部分组合而成，在不断演化中，它的理解难度越来越高。
第四部分:VAX架构是CISC架构，VAX指令集设计时的主要目标是：
（1）使指令集与编程语言尽量接近，以此简化编译器。
（2）为减小指令所占内存，VAX指令集中指令长度的可变。
因为VAX设计目的与MIPS不同，因此，最终的架构也就不同，在VAX于MIPS中，对于相同数据类型具有不同的名称。
第五部分：IBM360被提出时，首次使用计算机体系结构术语。IBM360的出现具有重大意义。它提出的目的是为了使相同软件在同一架构的不同机器上也能正常运行。显然，这是一个很正确的决定，并且为现代计算机的繁盛奠定了基础。同时，在IBM360架构中引入的几种标准一直使用到现在。

== Idea for improvement ==
开篇的Introduction可以对文章的内容进行大致概括。文章可以精简一部分。

== Lessons learned ==
从这篇论文中，我了解到了桌面/服务器RISC与嵌入式RISC的不同，并知道了几种代表性RISC的特有的指令集及功能。同时，每个指令集设计时都有各自的目的，不同目的驱使了不同指令集的诞生。在设计指令集时，应该首先考虑适用的场景以及主要目的，从而进行不同的权衡。
Paper review
学号：1160300527
  姓名：肖松      
== Paper summary ==
这篇论文对多种指令集进行了对比，从几个方面对各种桌面/服务器RISC指令集与嵌入式RISC指令集进行了对比，比如寻址模式，指令格式。然后对MIPS核心指令集，桌面/服务器RISC的多媒体扩展，嵌入式RISC的数字信号处理扩展等内容进行详细说明，介绍了MIPS核心的常见扩展以及10种指令集架构特有的功能，对另外3种架构进行了具体的介绍。最后叙述了指令集架构的发展趋势以及对未来发展趋势的预测。

== Strength of paper ==
内容充实且具体，数据详细，有说服力。将各种架构以表格形式形成对比，结果较为直观，且分别描述各种架构的特点

== Weakness of paper ==
开篇的Introduce并没有很好的概括文章的主要讲述的内容。论文内容较多但没有一个比较完善的目录，不便于反复阅读以及查找。

== Detailed comment ==
第一部分对10种精简指令集的概况进行了大致的介绍：有的指令集有巨大的市场空间，保持着优势，有的却已经逐渐消失。而IBM360/370则成为经典，它在60年代提出的标准（如按字节寻址等）甚至到今天依然适用。
第二部分：RISC划分为两类，一类是桌面和服务器的RISC，另一类是嵌入式的RISC。在该部分中对两类RISC进行了对比，讨论了他们的异同，并且以表格形式表示出来，如嵌入式RISC中通用寄存器的数量大多在8到16个间，桌面/服务器RISC则有32个通用寄存器，同时，指令的长度等内容也有所不同。与嵌入式RISC指令集相比，桌面/服务器RISC在寻址上更加简化。
第三部分：80x86并非是一开始就非常完美，而是逐渐在其基础上添加新的功能，一步步发展而来，并且随时代发展不断演进，从而有良好的向后兼容性。虽然80x86有很多应用实例，但是由于它是由各个部分组合而成，在不断演化中，它的理解难度越来越高。
第四部分:VAX架构是CISC架构，VAX指令集设计时的主要目标是：
（1）使指令集与编程语言尽量接近，以此简化编译器。
（2）为减小指令所占内存，VAX指令集中指令长度的可变。
因为VAX设计目的与MIPS不同，因此，最终的架构也就不同，在VAX于MIPS中，对于相同数据类型具有不同的名称。
第五部分：IBM360被提出时，首次使用计算机体系结构术语。IBM360的出现具有重大意义。它提出的目的是为了使相同软件在同一架构的不同机器上也能正常运行。显然，这是一个很正确的决定，并且为现代计算机的繁盛奠定了基础。同时，在IBM360架构中引入的几种标准一直使用到现在。

== Idea for improvement ==
开篇的Introduction可以对文章的内容进行大致概括。文章可以精简一部分。

== Lessons learned ==
从这篇论文中，我了解到了桌面/服务器RISC与嵌入式RISC的不同，并知道了几种代表性RISC的特有的指令集及功能。同时，每个指令集设计时都有各自的目的，不同目的驱使了不同指令集的诞生。在设计指令集时，应该首先考虑适用的场景以及主要目的，从而进行不同的权衡。
Paper review
学号：1160300527
  姓名：肖松      
== Paper summary ==
这篇论文对多种指令集进行了对比，从几个方面对各种桌面/服务器RISC指令集与嵌入式RISC指令集进行了对比，比如寻址模式，指令格式。然后对MIPS核心指令集，桌面/服务器RISC的多媒体扩展，嵌入式RISC的数字信号处理扩展等内容进行详细说明，介绍了MIPS核心的常见扩展以及10种指令集架构特有的功能，对另外3种架构进行了具体的介绍。最后叙述了指令集架构的发展趋势以及对未来发展趋势的预测。

== Strength of paper ==
内容充实且具体，数据详细，有说服力。将各种架构以表格形式形成对比，结果较为直观，且分别描述各种架构的特点

== Weakness of paper ==
开篇的Introduce并没有很好的概括文章的主要讲述的内容。论文内容较多但没有一个比较完善的目录，不便于反复阅读以及查找。

== Detailed comment ==
第一部分对10种精简指令集的概况进行了大致的介绍：有的指令集有巨大的市场空间，保持着优势，有的却已经逐渐消失。而IBM360/370则成为经典，它在60年代提出的标准（如按字节寻址等）甚至到今天依然适用。
第二部分：RISC划分为两类，一类是桌面和服务器的RISC，另一类是嵌入式的RISC。在该部分中对两类RISC进行了对比，讨论了他们的异同，并且以表格形式表示出来，如嵌入式RISC中通用寄存器的数量大多在8到16个间，桌面/服务器RISC则有32个通用寄存器，同时，指令的长度等内容也有所不同。与嵌入式RISC指令集相比，桌面/服务器RISC在寻址上更加简化。
第三部分：80x86并非是一开始就非常完美，而是逐渐在其基础上添加新的功能，一步步发展而来，并且随时代发展不断演进，从而有良好的向后兼容性。虽然80x86有很多应用实例，但是由于它是由各个部分组合而成，在不断演化中，它的理解难度越来越高。
第四部分:VAX架构是CISC架构，VAX指令集设计时的主要目标是：
（1）使指令集与编程语言尽量接近，以此简化编译器。
（2）为减小指令所占内存，VAX指令集中指令长度的可变。
因为VAX设计目的与MIPS不同，因此，最终的架构也就不同，在VAX于MIPS中，对于相同数据类型具有不同的名称。
第五部分：IBM360被提出时，首次使用计算机体系结构术语。IBM360的出现具有重大意义。它提出的目的是为了使相同软件在同一架构的不同机器上也能正常运行。显然，这是一个很正确的决定，并且为现代计算机的繁盛奠定了基础。同时，在IBM360架构中引入的几种标准一直使用到现在。

== Idea for improvement ==
开篇的Introduction可以对文章的内容进行大致概括。文章可以精简一部分。

== Lessons learned ==
从这篇论文中，我了解到了桌面/服务器RISC与嵌入式RISC的不同，并知道了几种代表性RISC的特有的指令集及功能。同时，每个指令集设计时都有各自的目的，不同目的驱使了不同指令集的诞生。在设计指令集时，应该首先考虑适用的场景以及主要目的，从而进行不同的权衡。
Paper review
学号：1160300527
  姓名：肖松      
== Paper summary ==
这篇论文对多种指令集进行了对比，从几个方面对各种桌面/服务器RISC指令集与嵌入式RISC指令集进行了对比，比如寻址模式，指令格式。然后对MIPS核心指令集，桌面/服务器RISC的多媒体扩展，嵌入式RISC的数字信号处理扩展等内容进行详细说明，介绍了MIPS核心的常见扩展以及10种指令集架构特有的功能，对另外3种架构进行了具体的介绍。最后叙述了指令集架构的发展趋势以及对未来发展趋势的预测。

== Strength of paper ==
内容充实且具体，数据详细，有说服力。将各种架构以表格形式形成对比，结果较为直观，且分别描述各种架构的特点

== Weakness of paper ==
开篇的Introduce并没有很好的概括文章的主要讲述的内容。论文内容较多但没有一个比较完善的目录，不便于反复阅读以及查找。

== Detailed comment ==
第一部分对10种精简指令集的概况进行了大致的介绍：有的指令集有巨大的市场空间，保持着优势，有的却已经逐渐消失。而IBM360/370则成为经典，它在60年代提出的标准（如按字节寻址等）甚至到今天依然适用。
第二部分：RISC划分为两类，一类是桌面和服务器的RISC，另一类是嵌入式的RISC。在该部分中对两类RISC进行了对比，讨论了他们的异同，并且以表格形式表示出来，如嵌入式RISC中通用寄存器的数量大多在8到16个间，桌面/服务器RISC则有32个通用寄存器，同时，指令的长度等内容也有所不同。与嵌入式RISC指令集相比，桌面/服务器RISC在寻址上更加简化。
第三部分：80x86并非是一开始就非常完美，而是逐渐在其基础上添加新的功能，一步步发展而来，并且随时代发展不断演进，从而有良好的向后兼容性。虽然80x86有很多应用实例，但是由于它是由各个部分组合而成，在不断演化中，它的理解难度越来越高。
第四部分:VAX架构是CISC架构，VAX指令集设计时的主要目标是：
（1）使指令集与编程语言尽量接近，以此简化编译器。
（2）为减小指令所占内存，VAX指令集中指令长度的可变。
因为VAX设计目的与MIPS不同，因此，最终的架构也就不同，在VAX于MIPS中，对于相同数据类型具有不同的名称。
第五部分：IBM360被提出时，首次使用计算机体系结构术语。IBM360的出现具有重大意义。它提出的目的是为了使相同软件在同一架构的不同机器上也能正常运行。显然，这是一个很正确的决定，并且为现代计算机的繁盛奠定了基础。同时，在IBM360架构中引入的几种标准一直使用到现在。

== Idea for improvement ==
开篇的Introduction可以对文章的内容进行大致概括。文章可以精简一部分。

== Lessons learned ==
从这篇论文中，我了解到了桌面/服务器RISC与嵌入式RISC的不同，并知道了几种代表性RISC的特有的指令集及功能。同时，每个指令集设计时都有各自的目的，不同目的驱使了不同指令集的诞生。在设计指令集时，应该首先考虑适用的场景以及主要目的，从而进行不同的权衡。
Paper review
学号：1160300527
  姓名：肖松      
== Paper summary ==
这篇论文对多种指令集进行了对比，从几个方面对各种桌面/服务器RISC指令集与嵌入式RISC指令集进行了对比，比如寻址模式，指令格式。然后对MIPS核心指令集，桌面/服务器RISC的多媒体扩展，嵌入式RISC的数字信号处理扩展等内容进行详细说明，介绍了MIPS核心的常见扩展以及10种指令集架构特有的功能，对另外3种架构进行了具体的介绍。最后叙述了指令集架构的发展趋势以及对未来发展趋势的预测。

== Strength of paper ==
内容充实且具体，数据详细，有说服力。将各种架构以表格形式形成对比，结果较为直观，且分别描述各种架构的特点

== Weakness of paper ==
开篇的Introduce并没有很好的概括文章的主要讲述的内容。论文内容较多但没有一个比较完善的目录，不便于反复阅读以及查找。

== Detailed comment ==
第一部分对10种精简指令集的概况进行了大致的介绍：有的指令集有巨大的市场空间，保持着优势，有的却已经逐渐消失。而IBM360/370则成为经典，它在60年代提出的标准（如按字节寻址等）甚至到今天依然适用。
第二部分：RISC划分为两类，一类是桌面和服务器的RISC，另一类是嵌入式的RISC。在该部分中对两类RISC进行了对比，讨论了他们的异同，并且以表格形式表示出来，如嵌入式RISC中通用寄存器的数量大多在8到16个间，桌面/服务器RISC则有32个通用寄存器，同时，指令的长度等内容也有所不同。与嵌入式RISC指令集相比，桌面/服务器RISC在寻址上更加简化。
第三部分：80x86并非是一开始就非常完美，而是逐渐在其基础上添加新的功能，一步步发展而来，并且随时代发展不断演进，从而有良好的向后兼容性。虽然80x86有很多应用实例，但是由于它是由各个部分组合而成，在不断演化中，它的理解难度越来越高。
第四部分:VAX架构是CISC架构，VAX指令集设计时的主要目标是：
（1）使指令集与编程语言尽量接近，以此简化编译器。
（2）为减小指令所占内存，VAX指令集中指令长度的可变。
因为VAX设计目的与MIPS不同，因此，最终的架构也就不同，在VAX于MIPS中，对于相同数据类型具有不同的名称。
第五部分：IBM360被提出时，首次使用计算机体系结构术语。IBM360的出现具有重大意义。它提出的目的是为了使相同软件在同一架构的不同机器上也能正常运行。显然，这是一个很正确的决定，并且为现代计算机的繁盛奠定了基础。同时，在IBM360架构中引入的几种标准一直使用到现在。

== Idea for improvement ==
开篇的Introduction可以对文章的内容进行大致概括。文章可以精简一部分。

== Lessons learned ==
从这篇论文中，我了解到了桌面/服务器RISC与嵌入式RISC的不同，并知道了几种代表性RISC的特有的指令集及功能。同时，每个指令集设计时都有各自的目的，不同目的驱使了不同指令集的诞生。在设计指令集时，应该首先考虑适用的场景以及主要目的，从而进行不同的权衡。
Paper review
学号：1160300527
  姓名：肖松      
== Paper summary ==
这篇论文对多种指令集进行了对比，从几个方面对各种桌面/服务器RISC指令集与嵌入式RISC指令集进行了对比，比如寻址模式，指令格式。然后对MIPS核心指令集，桌面/服务器RISC的多媒体扩展，嵌入式RISC的数字信号处理扩展等内容进行详细说明，介绍了MIPS核心的常见扩展以及10种指令集架构特有的功能，对另外3种架构进行了具体的介绍。最后叙述了指令集架构的发展趋势以及对未来发展趋势的预测。

== Strength of paper ==
内容充实且具体，数据详细，有说服力。将各种架构以表格形式形成对比，结果较为直观，且分别描述各种架构的特点

== Weakness of paper ==
开篇的Introduce并没有很好的概括文章的主要讲述的内容。论文内容较多但没有一个比较完善的目录，不便于反复阅读以及查找。

== Detailed comment ==
第一部分对10种精简指令集的概况进行了大致的介绍：有的指令集有巨大的市场空间，保持着优势，有的却已经逐渐消失。而IBM360/370则成为经典，它在60年代提出的标准（如按字节寻址等）甚至到今天依然适用。
第二部分：RISC划分为两类，一类是桌面和服务器的RISC，另一类是嵌入式的RISC。在该部分中对两类RISC进行了对比，讨论了他们的异同，并且以表格形式表示出来，如嵌入式RISC中通用寄存器的数量大多在8到16个间，桌面/服务器RISC则有32个通用寄存器，同时，指令的长度等内容也有所不同。与嵌入式RISC指令集相比，桌面/服务器RISC在寻址上更加简化。
第三部分：80x86并非是一开始就非常完美，而是逐渐在其基础上添加新的功能，一步步发展而来，并且随时代发展不断演进，从而有良好的向后兼容性。虽然80x86有很多应用实例，但是由于它是由各个部分组合而成，在不断演化中，它的理解难度越来越高。
第四部分:VAX架构是CISC架构，VAX指令集设计时的主要目标是：
（1）使指令集与编程语言尽量接近，以此简化编译器。
（2）为减小指令所占内存，VAX指令集中指令长度的可变。
因为VAX设计目的与MIPS不同，因此，最终的架构也就不同，在VAX于MIPS中，对于相同数据类型具有不同的名称。
第五部分：IBM360被提出时，首次使用计算机体系结构术语。IBM360的出现具有重大意义。它提出的目的是为了使相同软件在同一架构的不同机器上也能正常运行。显然，这是一个很正确的决定，并且为现代计算机的繁盛奠定了基础。同时，在IBM360架构中引入的几种标准一直使用到现在。

== Idea for improvement ==
开篇的Introduction可以对文章的内容进行大致概括。文章可以精简一部分。

== Lessons learned ==
从这篇论文中，我了解到了桌面/服务器RISC与嵌入式RISC的不同，并知道了几种代表性RISC的特有的指令集及功能。同时，每个指令集设计时都有各自的目的，不同目的驱使了不同指令集的诞生。在设计指令集时，应该首先考虑适用的场景以及主要目的，从而进行不同的权衡。
Paper review
学号：1160300527
  姓名：肖松      
== Paper summary ==
这篇论文对多种指令集进行了对比，从几个方面对各种桌面/服务器RISC指令集与嵌入式RISC指令集进行了对比，比如寻址模式，指令格式。然后对MIPS核心指令集，桌面/服务器RISC的多媒体扩展，嵌入式RISC的数字信号处理扩展等内容进行详细说明，介绍了MIPS核心的常见扩展以及10种指令集架构特有的功能，对另外3种架构进行了具体的介绍。最后叙述了指令集架构的发展趋势以及对未来发展趋势的预测。

== Strength of paper ==
内容充实且具体，数据详细，有说服力。将各种架构以表格形式形成对比，结果较为直观，且分别描述各种架构的特点

== Weakness of paper ==
开篇的Introduce并没有很好的概括文章的主要讲述的内容。论文内容较多但没有一个比较完善的目录，不便于反复阅读以及查找。

== Detailed comment ==
第一部分对10种精简指令集的概况进行了大致的介绍：有的指令集有巨大的市场空间，保持着优势，有的却已经逐渐消失。而IBM360/370则成为经典，它在60年代提出的标准（如按字节寻址等）甚至到今天依然适用。
第二部分：RISC划分为两类，一类是桌面和服务器的RISC，另一类是嵌入式的RISC。在该部分中对两类RISC进行了对比，讨论了他们的异同，并且以表格形式表示出来，如嵌入式RISC中通用寄存器的数量大多在8到16个间，桌面/服务器RISC则有32个通用寄存器，同时，指令的长度等内容也有所不同。与嵌入式RISC指令集相比，桌面/服务器RISC在寻址上更加简化。
第三部分：80x86并非是一开始就非常完美，而是逐渐在其基础上添加新的功能，一步步发展而来，并且随时代发展不断演进，从而有良好的向后兼容性。虽然80x86有很多应用实例，但是由于它是由各个部分组合而成，在不断演化中，它的理解难度越来越高。
第四部分:VAX架构是CISC架构，VAX指令集设计时的主要目标是：
（1）使指令集与编程语言尽量接近，以此简化编译器。
（2）为减小指令所占内存，VAX指令集中指令长度的可变。
因为VAX设计目的与MIPS不同，因此，最终的架构也就不同，在VAX于MIPS中，对于相同数据类型具有不同的名称。
第五部分：IBM360被提出时，首次使用计算机体系结构术语。IBM360的出现具有重大意义。它提出的目的是为了使相同软件在同一架构的不同机器上也能正常运行。显然，这是一个很正确的决定，并且为现代计算机的繁盛奠定了基础。同时，在IBM360架构中引入的几种标准一直使用到现在。

== Idea for improvement ==
开篇的Introduction可以对文章的内容进行大致概括。文章可以精简一部分。

== Lessons learned ==
从这篇论文中，我了解到了桌面/服务器RISC与嵌入式RISC的不同，并知道了几种代表性RISC的特有的指令集及功能。同时，每个指令集设计时都有各自的目的，不同目的驱使了不同指令集的诞生。在设计指令集时，应该首先考虑适用的场景以及主要目的，从而进行不同的权衡。
Paper review
学号：1160300527
  姓名：肖松      
== Paper summary ==
这篇论文对多种指令集进行了对比，从几个方面对各种桌面/服务器RISC指令集与嵌入式RISC指令集进行了对比，比如寻址模式，指令格式。然后对MIPS核心指令集，桌面/服务器RISC的多媒体扩展，嵌入式RISC的数字信号处理扩展等内容进行详细说明，介绍了MIPS核心的常见扩展以及10种指令集架构特有的功能，对另外3种架构进行了具体的介绍。最后叙述了指令集架构的发展趋势以及对未来发展趋势的预测。

== Strength of paper ==
内容充实且具体，数据详细，有说服力。将各种架构以表格形式形成对比，结果较为直观，且分别描述各种架构的特点

== Weakness of paper ==
开篇的Introduce并没有很好的概括文章的主要讲述的内容。论文内容较多但没有一个比较完善的目录，不便于反复阅读以及查找。

== Detailed comment ==
第一部分对10种精简指令集的概况进行了大致的介绍：有的指令集有巨大的市场空间，保持着优势，有的却已经逐渐消失。而IBM360/370则成为经典，它在60年代提出的标准（如按字节寻址等）甚至到今天依然适用。
第二部分：RISC划分为两类，一类是桌面和服务器的RISC，另一类是嵌入式的RISC。在该部分中对两类RISC进行了对比，讨论了他们的异同，并且以表格形式表示出来，如嵌入式RISC中通用寄存器的数量大多在8到16个间，桌面/服务器RISC则有32个通用寄存器，同时，指令的长度等内容也有所不同。与嵌入式RISC指令集相比，桌面/服务器RISC在寻址上更加简化。
第三部分：80x86并非是一开始就非常完美，而是逐渐在其基础上添加新的功能，一步步发展而来，并且随时代发展不断演进，从而有良好的向后兼容性。虽然80x86有很多应用实例，但是由于它是由各个部分组合而成，在不断演化中，它的理解难度越来越高。
第四部分:VAX架构是CISC架构，VAX指令集设计时的主要目标是：
（1）使指令集与编程语言尽量接近，以此简化编译器。
（2）为减小指令所占内存，VAX指令集中指令长度的可变。
因为VAX设计目的与MIPS不同，因此，最终的架构也就不同，在VAX于MIPS中，对于相同数据类型具有不同的名称。
第五部分：IBM360被提出时，首次使用计算机体系结构术语。IBM360的出现具有重大意义。它提出的目的是为了使相同软件在同一架构的不同机器上也能正常运行。显然，这是一个很正确的决定，并且为现代计算机的繁盛奠定了基础。同时，在IBM360架构中引入的几种标准一直使用到现在。

== Idea for improvement ==
开篇的Introduction可以对文章的内容进行大致概括。文章可以精简一部分。

== Lessons learned ==
从这篇论文中，我了解到了桌面/服务器RISC与嵌入式RISC的不同，并知道了几种代表性RISC的特有的指令集及功能。同时，每个指令集设计时都有各自的目的，不同目的驱使了不同指令集的诞生。在设计指令集时，应该首先考虑适用的场景以及主要目的，从而进行不同的权衡。
Paper review
学号：1160300527
  姓名：肖松      
== Paper summary ==
这篇论文对多种指令集进行了对比，从几个方面对各种桌面/服务器RISC指令集与嵌入式RISC指令集进行了对比，比如寻址模式，指令格式。然后对MIPS核心指令集，桌面/服务器RISC的多媒体扩展，嵌入式RISC的数字信号处理扩展等内容进行详细说明，介绍了MIPS核心的常见扩展以及10种指令集架构特有的功能，对另外3种架构进行了具体的介绍。最后叙述了指令集架构的发展趋势以及对未来发展趋势的预测。

== Strength of paper ==
内容充实且具体，数据详细，有说服力。将各种架构以表格形式形成对比，结果较为直观，且分别描述各种架构的特点

== Weakness of paper ==
开篇的Introduce并没有很好的概括文章的主要讲述的内容。论文内容较多但没有一个比较完善的目录，不便于反复阅读以及查找。

== Detailed comment ==
第一部分对10种精简指令集的概况进行了大致的介绍：有的指令集有巨大的市场空间，保持着优势，有的却已经逐渐消失。而IBM360/370则成为经典，它在60年代提出的标准（如按字节寻址等）甚至到今天依然适用。
第二部分：RISC划分为两类，一类是桌面和服务器的RISC，另一类是嵌入式的RISC。在该部分中对两类RISC进行了对比，讨论了他们的异同，并且以表格形式表示出来，如嵌入式RISC中通用寄存器的数量大多在8到16个间，桌面/服务器RISC则有32个通用寄存器，同时，指令的长度等内容也有所不同。与嵌入式RISC指令集相比，桌面/服务器RISC在寻址上更加简化。
第三部分：80x86并非是一开始就非常完美，而是逐渐在其基础上添加新的功能，一步步发展而来，并且随时代发展不断演进，从而有良好的向后兼容性。虽然80x86有很多应用实例，但是由于它是由各个部分组合而成，在不断演化中，它的理解难度越来越高。
第四部分:VAX架构是CISC架构，VAX指令集设计时的主要目标是：
（1）使指令集与编程语言尽量接近，以此简化编译器。
（2）为减小指令所占内存，VAX指令集中指令长度的可变。
因为VAX设计目的与MIPS不同，因此，最终的架构也就不同，在VAX于MIPS中，对于相同数据类型具有不同的名称。
第五部分：IBM360被提出时，首次使用计算机体系结构术语。IBM360的出现具有重大意义。它提出的目的是为了使相同软件在同一架构的不同机器上也能正常运行。显然，这是一个很正确的决定，并且为现代计算机的繁盛奠定了基础。同时，在IBM360架构中引入的几种标准一直使用到现在。

== Idea for improvement ==
开篇的Introduction可以对文章的内容进行大致概括。文章可以精简一部分。

== Lessons learned ==
从这篇论文中，我了解到了桌面/服务器RISC与嵌入式RISC的不同，并知道了几种代表性RISC的特有的指令集及功能。同时，每个指令集设计时都有各自的目的，不同目的驱使了不同指令集的诞生。在设计指令集时，应该首先考虑适用的场景以及主要目的，从而进行不同的权衡。
Paper review
学号：1160300527
  姓名：肖松      
== Paper summary ==
这篇论文对多种指令集进行了对比，从几个方面对各种桌面/服务器RISC指令集与嵌入式RISC指令集进行了对比，比如寻址模式，指令格式。然后对MIPS核心指令集，桌面/服务器RISC的多媒体扩展，嵌入式RISC的数字信号处理扩展等内容进行详细说明，介绍了MIPS核心的常见扩展以及10种指令集架构特有的功能，对另外3种架构进行了具体的介绍。最后叙述了指令集架构的发展趋势以及对未来发展趋势的预测。

== Strength of paper ==
内容充实且具体，数据详细，有说服力。将各种架构以表格形式形成对比，结果较为直观，且分别描述各种架构的特点

== Weakness of paper ==
开篇的Introduce并没有很好的概括文章的主要讲述的内容。论文内容较多但没有一个比较完善的目录，不便于反复阅读以及查找。

== Detailed comment ==
第一部分对10种精简指令集的概况进行了大致的介绍：有的指令集有巨大的市场空间，保持着优势，有的却已经逐渐消失。而IBM360/370则成为经典，它在60年代提出的标准（如按字节寻址等）甚至到今天依然适用。
第二部分：RISC划分为两类，一类是桌面和服务器的RISC，另一类是嵌入式的RISC。在该部分中对两类RISC进行了对比，讨论了他们的异同，并且以表格形式表示出来，如嵌入式RISC中通用寄存器的数量大多在8到16个间，桌面/服务器RISC则有32个通用寄存器，同时，指令的长度等内容也有所不同。与嵌入式RISC指令集相比，桌面/服务器RISC在寻址上更加简化。
第三部分：80x86并非是一开始就非常完美，而是逐渐在其基础上添加新的功能，一步步发展而来，并且随时代发展不断演进，从而有良好的向后兼容性。虽然80x86有很多应用实例，但是由于它是由各个部分组合而成，在不断演化中，它的理解难度越来越高。
第四部分:VAX架构是CISC架构，VAX指令集设计时的主要目标是：
（1）使指令集与编程语言尽量接近，以此简化编译器。
（2）为减小指令所占内存，VAX指令集中指令长度的可变。
因为VAX设计目的与MIPS不同，因此，最终的架构也就不同，在VAX于MIPS中，对于相同数据类型具有不同的名称。
第五部分：IBM360被提出时，首次使用计算机体系结构术语。IBM360的出现具有重大意义。它提出的目的是为了使相同软件在同一架构的不同机器上也能正常运行。显然，这是一个很正确的决定，并且为现代计算机的繁盛奠定了基础。同时，在IBM360架构中引入的几种标准一直使用到现在。

== Idea for improvement ==
开篇的Introduction可以对文章的内容进行大致概括。文章可以精简一部分。

== Lessons learned ==
从这篇论文中，我了解到了桌面/服务器RISC与嵌入式RISC的不同，并知道了几种代表性RISC的特有的指令集及功能。同时，每个指令集设计时都有各自的目的，不同目的驱使了不同指令集的诞生。在设计指令集时，应该首先考虑适用的场景以及主要目的，从而进行不同的权衡。
Paper review
学号：1160300527
  姓名：肖松      
== Paper summary ==
这篇论文对多种指令集进行了对比，从几个方面对各种桌面/服务器RISC指令集与嵌入式RISC指令集进行了对比，比如寻址模式，指令格式。然后对MIPS核心指令集，桌面/服务器RISC的多媒体扩展，嵌入式RISC的数字信号处理扩展等内容进行详细说明，介绍了MIPS核心的常见扩展以及10种指令集架构特有的功能，对另外3种架构进行了具体的介绍。最后叙述了指令集架构的发展趋势以及对未来发展趋势的预测。

== Strength of paper ==
内容充实且具体，数据详细，有说服力。将各种架构以表格形式形成对比，结果较为直观，且分别描述各种架构的特点

== Weakness of paper ==
开篇的Introduce并没有很好的概括文章的主要讲述的内容。论文内容较多但没有一个比较完善的目录，不便于反复阅读以及查找。

== Detailed comment ==
第一部分对10种精简指令集的概况进行了大致的介绍：有的指令集有巨大的市场空间，保持着优势，有的却已经逐渐消失。而IBM360/370则成为经典，它在60年代提出的标准（如按字节寻址等）甚至到今天依然适用。
第二部分：RISC划分为两类，一类是桌面和服务器的RISC，另一类是嵌入式的RISC。在该部分中对两类RISC进行了对比，讨论了他们的异同，并且以表格形式表示出来，如嵌入式RISC中通用寄存器的数量大多在8到16个间，桌面/服务器RISC则有32个通用寄存器，同时，指令的长度等内容也有所不同。与嵌入式RISC指令集相比，桌面/服务器RISC在寻址上更加简化。
第三部分：80x86并非是一开始就非常完美，而是逐渐在其基础上添加新的功能，一步步发展而来，并且随时代发展不断演进，从而有良好的向后兼容性。虽然80x86有很多应用实例，但是由于它是由各个部分组合而成，在不断演化中，它的理解难度越来越高。
第四部分:VAX架构是CISC架构，VAX指令集设计时的主要目标是：
（1）使指令集与编程语言尽量接近，以此简化编译器。
（2）为减小指令所占内存，VAX指令集中指令长度的可变。
因为VAX设计目的与MIPS不同，因此，最终的架构也就不同，在VAX于MIPS中，对于相同数据类型具有不同的名称。
第五部分：IBM360被提出时，首次使用计算机体系结构术语。IBM360的出现具有重大意义。它提出的目的是为了使相同软件在同一架构的不同机器上也能正常运行。显然，这是一个很正确的决定，并且为现代计算机的繁盛奠定了基础。同时，在IBM360架构中引入的几种标准一直使用到现在。

== Idea for improvement ==
开篇的Introduction可以对文章的内容进行大致概括。文章可以精简一部分。

== Lessons learned ==
从这篇论文中，我了解到了桌面/服务器RISC与嵌入式RISC的不同，并知道了几种代表性RISC的特有的指令集及功能。同时，每个指令集设计时都有各自的目的，不同目的驱使了不同指令集的诞生。在设计指令集时，应该首先考虑适用的场景以及主要目的，从而进行不同的权衡。
Paper review
学号：1160300527
  姓名：肖松      
== Paper summary ==
这篇论文对多种指令集进行了对比，从几个方面对各种桌面/服务器RISC指令集与嵌入式RISC指令集进行了对比，比如寻址模式，指令格式。然后对MIPS核心指令集，桌面/服务器RISC的多媒体扩展，嵌入式RISC的数字信号处理扩展等内容进行详细说明，介绍了MIPS核心的常见扩展以及10种指令集架构特有的功能，对另外3种架构进行了具体的介绍。最后叙述了指令集架构的发展趋势以及对未来发展趋势的预测。

== Strength of paper ==
内容充实且具体，数据详细，有说服力。将各种架构以表格形式形成对比，结果较为直观，且分别描述各种架构的特点

== Weakness of paper ==
开篇的Introduce并没有很好的概括文章的主要讲述的内容。论文内容较多但没有一个比较完善的目录，不便于反复阅读以及查找。

== Detailed comment ==
第一部分对10种精简指令集的概况进行了大致的介绍：有的指令集有巨大的市场空间，保持着优势，有的却已经逐渐消失。而IBM360/370则成为经典，它在60年代提出的标准（如按字节寻址等）甚至到今天依然适用。
第二部分：RISC划分为两类，一类是桌面和服务器的RISC，另一类是嵌入式的RISC。在该部分中对两类RISC进行了对比，讨论了他们的异同，并且以表格形式表示出来，如嵌入式RISC中通用寄存器的数量大多在8到16个间，桌面/服务器RISC则有32个通用寄存器，同时，指令的长度等内容也有所不同。与嵌入式RISC指令集相比，桌面/服务器RISC在寻址上更加简化。
第三部分：80x86并非是一开始就非常完美，而是逐渐在其基础上添加新的功能，一步步发展而来，并且随时代发展不断演进，从而有良好的向后兼容性。虽然80x86有很多应用实例，但是由于它是由各个部分组合而成，在不断演化中，它的理解难度越来越高。
第四部分:VAX架构是CISC架构，VAX指令集设计时的主要目标是：
（1）使指令集与编程语言尽量接近，以此简化编译器。
（2）为减小指令所占内存，VAX指令集中指令长度的可变。
因为VAX设计目的与MIPS不同，因此，最终的架构也就不同，在VAX于MIPS中，对于相同数据类型具有不同的名称。
第五部分：IBM360被提出时，首次使用计算机体系结构术语。IBM360的出现具有重大意义。它提出的目的是为了使相同软件在同一架构的不同机器上也能正常运行。显然，这是一个很正确的决定，并且为现代计算机的繁盛奠定了基础。同时，在IBM360架构中引入的几种标准一直使用到现在。

== Idea for improvement ==
开篇的Introduction可以对文章的内容进行大致概括。文章可以精简一部分。

== Lessons learned ==
从这篇论文中，我了解到了桌面/服务器RISC与嵌入式RISC的不同，并知道了几种代表性RISC的特有的指令集及功能。同时，每个指令集设计时都有各自的目的，不同目的驱使了不同指令集的诞生。在设计指令集时，应该首先考虑适用的场景以及主要目的，从而进行不同的权衡。
Paper review
学号：1160300527
  姓名：肖松      
== Paper summary ==
这篇论文对多种指令集进行了对比，从几个方面对各种桌面/服务器RISC指令集与嵌入式RISC指令集进行了对比，比如寻址模式，指令格式。然后对MIPS核心指令集，桌面/服务器RISC的多媒体扩展，嵌入式RISC的数字信号处理扩展等内容进行详细说明，介绍了MIPS核心的常见扩展以及10种指令集架构特有的功能，对另外3种架构进行了具体的介绍。最后叙述了指令集架构的发展趋势以及对未来发展趋势的预测。

== Strength of paper ==
内容充实且具体，数据详细，有说服力。将各种架构以表格形式形成对比，结果较为直观，且分别描述各种架构的特点

== Weakness of paper ==
开篇的Introduce并没有很好的概括文章的主要讲述的内容。论文内容较多但没有一个比较完善的目录，不便于反复阅读以及查找。

== Detailed comment ==
第一部分对10种精简指令集的概况进行了大致的介绍：有的指令集有巨大的市场空间，保持着优势，有的却已经逐渐消失。而IBM360/370则成为经典，它在60年代提出的标准（如按字节寻址等）甚至到今天依然适用。
第二部分：RISC划分为两类，一类是桌面和服务器的RISC，另一类是嵌入式的RISC。在该部分中对两类RISC进行了对比，讨论了他们的异同，并且以表格形式表示出来，如嵌入式RISC中通用寄存器的数量大多在8到16个间，桌面/服务器RISC则有32个通用寄存器，同时，指令的长度等内容也有所不同。与嵌入式RISC指令集相比，桌面/服务器RISC在寻址上更加简化。
第三部分：80x86并非是一开始就非常完美，而是逐渐在其基础上添加新的功能，一步步发展而来，并且随时代发展不断演进，从而有良好的向后兼容性。虽然80x86有很多应用实例，但是由于它是由各个部分组合而成，在不断演化中，它的理解难度越来越高。
第四部分:VAX架构是CISC架构，VAX指令集设计时的主要目标是：
（1）使指令集与编程语言尽量接近，以此简化编译器。
（2）为减小指令所占内存，VAX指令集中指令长度的可变。
因为VAX设计目的与MIPS不同，因此，最终的架构也就不同，在VAX于MIPS中，对于相同数据类型具有不同的名称。
第五部分：IBM360被提出时，首次使用计算机体系结构术语。IBM360的出现具有重大意义。它提出的目的是为了使相同软件在同一架构的不同机器上也能正常运行。显然，这是一个很正确的决定，并且为现代计算机的繁盛奠定了基础。同时，在IBM360架构中引入的几种标准一直使用到现在。

== Idea for improvement ==
开篇的Introduction可以对文章的内容进行大致概括。文章可以精简一部分。

== Lessons learned ==
从这篇论文中，我了解到了桌面/服务器RISC与嵌入式RISC的不同，并知道了几种代表性RISC的特有的指令集及功能。同时，每个指令集设计时都有各自的目的，不同目的驱使了不同指令集的诞生。在设计指令集时，应该首先考虑适用的场景以及主要目的，从而进行不同的权衡。
Paper review
学号：1160300527
  姓名：肖松      
== Paper summary ==
这篇论文对多种指令集进行了对比，从几个方面对各种桌面/服务器RISC指令集与嵌入式RISC指令集进行了对比，比如寻址模式，指令格式。然后对MIPS核心指令集，桌面/服务器RISC的多媒体扩展，嵌入式RISC的数字信号处理扩展等内容进行详细说明，介绍了MIPS核心的常见扩展以及10种指令集架构特有的功能，对另外3种架构进行了具体的介绍。最后叙述了指令集架构的发展趋势以及对未来发展趋势的预测。

== Strength of paper ==
内容充实且具体，数据详细，有说服力。将各种架构以表格形式形成对比，结果较为直观，且分别描述各种架构的特点

== Weakness of paper ==
开篇的Introduce并没有很好的概括文章的主要讲述的内容。论文内容较多但没有一个比较完善的目录，不便于反复阅读以及查找。

== Detailed comment ==
第一部分对10种精简指令集的概况进行了大致的介绍：有的指令集有巨大的市场空间，保持着优势，有的却已经逐渐消失。而IBM360/370则成为经典，它在60年代提出的标准（如按字节寻址等）甚至到今天依然适用。
第二部分：RISC划分为两类，一类是桌面和服务器的RISC，另一类是嵌入式的RISC。在该部分中对两类RISC进行了对比，讨论了他们的异同，并且以表格形式表示出来，如嵌入式RISC中通用寄存器的数量大多在8到16个间，桌面/服务器RISC则有32个通用寄存器，同时，指令的长度等内容也有所不同。与嵌入式RISC指令集相比，桌面/服务器RISC在寻址上更加简化。
第三部分：80x86并非是一开始就非常完美，而是逐渐在其基础上添加新的功能，一步步发展而来，并且随时代发展不断演进，从而有良好的向后兼容性。虽然80x86有很多应用实例，但是由于它是由各个部分组合而成，在不断演化中，它的理解难度越来越高。
第四部分:VAX架构是CISC架构，VAX指令集设计时的主要目标是：
（1）使指令集与编程语言尽量接近，以此简化编译器。
（2）为减小指令所占内存，VAX指令集中指令长度的可变。
因为VAX设计目的与MIPS不同，因此，最终的架构也就不同，在VAX于MIPS中，对于相同数据类型具有不同的名称。
第五部分：IBM360被提出时，首次使用计算机体系结构术语。IBM360的出现具有重大意义。它提出的目的是为了使相同软件在同一架构的不同机器上也能正常运行。显然，这是一个很正确的决定，并且为现代计算机的繁盛奠定了基础。同时，在IBM360架构中引入的几种标准一直使用到现在。

== Idea for improvement ==
开篇的Introduction可以对文章的内容进行大致概括。文章可以精简一部分。

== Lessons learned ==
从这篇论文中，我了解到了桌面/服务器RISC与嵌入式RISC的不同，并知道了几种代表性RISC的特有的指令集及功能。同时，每个指令集设计时都有各自的目的，不同目的驱使了不同指令集的诞生。在设计指令集时，应该首先考虑适用的场景以及主要目的，从而进行不同的权衡。
Paper review
学号：1160300527
  姓名：肖松      
== Paper summary ==
这篇论文对多种指令集进行了对比，从几个方面对各种桌面/服务器RISC指令集与嵌入式RISC指令集进行了对比，比如寻址模式，指令格式。然后对MIPS核心指令集，桌面/服务器RISC的多媒体扩展，嵌入式RISC的数字信号处理扩展等内容进行详细说明，介绍了MIPS核心的常见扩展以及10种指令集架构特有的功能，对另外3种架构进行了具体的介绍。最后叙述了指令集架构的发展趋势以及对未来发展趋势的预测。

== Strength of paper ==
内容充实且具体，数据详细，有说服力。将各种架构以表格形式形成对比，结果较为直观，且分别描述各种架构的特点

== Weakness of paper ==
开篇的Introduce并没有很好的概括文章的主要讲述的内容。论文内容较多但没有一个比较完善的目录，不便于反复阅读以及查找。

== Detailed comment ==
第一部分对10种精简指令集的概况进行了大致的介绍：有的指令集有巨大的市场空间，保持着优势，有的却已经逐渐消失。而IBM360/370则成为经典，它在60年代提出的标准（如按字节寻址等）甚至到今天依然适用。
第二部分：RISC划分为两类，一类是桌面和服务器的RISC，另一类是嵌入式的RISC。在该部分中对两类RISC进行了对比，讨论了他们的异同，并且以表格形式表示出来，如嵌入式RISC中通用寄存器的数量大多在8到16个间，桌面/服务器RISC则有32个通用寄存器，同时，指令的长度等内容也有所不同。与嵌入式RISC指令集相比，桌面/服务器RISC在寻址上更加简化。
第三部分：80x86并非是一开始就非常完美，而是逐渐在其基础上添加新的功能，一步步发展而来，并且随时代发展不断演进，从而有良好的向后兼容性。虽然80x86有很多应用实例，但是由于它是由各个部分组合而成，在不断演化中，它的理解难度越来越高。
第四部分:VAX架构是CISC架构，VAX指令集设计时的主要目标是：
（1）使指令集与编程语言尽量接近，以此简化编译器。
（2）为减小指令所占内存，VAX指令集中指令长度的可变。
因为VAX设计目的与MIPS不同，因此，最终的架构也就不同，在VAX于MIPS中，对于相同数据类型具有不同的名称。
第五部分：IBM360被提出时，首次使用计算机体系结构术语。IBM360的出现具有重大意义。它提出的目的是为了使相同软件在同一架构的不同机器上也能正常运行。显然，这是一个很正确的决定，并且为现代计算机的繁盛奠定了基础。同时，在IBM360架构中引入的几种标准一直使用到现在。

== Idea for improvement ==
开篇的Introduction可以对文章的内容进行大致概括。文章可以精简一部分。

== Lessons learned ==
从这篇论文中，我了解到了桌面/服务器RISC与嵌入式RISC的不同，并知道了几种代表性RISC的特有的指令集及功能。同时，每个指令集设计时都有各自的目的，不同目的驱使了不同指令集的诞生。在设计指令集时，应该首先考虑适用的场景以及主要目的，从而进行不同的权衡。
Paper review
学号：1160300527
  姓名：肖松      
== Paper summary ==
这篇论文对多种指令集进行了对比，从几个方面对各种桌面/服务器RISC指令集与嵌入式RISC指令集进行了对比，比如寻址模式，指令格式。然后对MIPS核心指令集，桌面/服务器RISC的多媒体扩展，嵌入式RISC的数字信号处理扩展等内容进行详细说明，介绍了MIPS核心的常见扩展以及10种指令集架构特有的功能，对另外3种架构进行了具体的介绍。最后叙述了指令集架构的发展趋势以及对未来发展趋势的预测。

== Strength of paper ==
内容充实且具体，数据详细，有说服力。将各种架构以表格形式形成对比，结果较为直观，且分别描述各种架构的特点

== Weakness of paper ==
开篇的Introduce并没有很好的概括文章的主要讲述的内容。论文内容较多但没有一个比较完善的目录，不便于反复阅读以及查找。

== Detailed comment ==
第一部分对10种精简指令集的概况进行了大致的介绍：有的指令集有巨大的市场空间，保持着优势，有的却已经逐渐消失。而IBM360/370则成为经典，它在60年代提出的标准（如按字节寻址等）甚至到今天依然适用。
第二部分：RISC划分为两类，一类是桌面和服务器的RISC，另一类是嵌入式的RISC。在该部分中对两类RISC进行了对比，讨论了他们的异同，并且以表格形式表示出来，如嵌入式RISC中通用寄存器的数量大多在8到16个间，桌面/服务器RISC则有32个通用寄存器，同时，指令的长度等内容也有所不同。与嵌入式RISC指令集相比，桌面/服务器RISC在寻址上更加简化。
第三部分：80x86并非是一开始就非常完美，而是逐渐在其基础上添加新的功能，一步步发展而来，并且随时代发展不断演进，从而有良好的向后兼容性。虽然80x86有很多应用实例，但是由于它是由各个部分组合而成，在不断演化中，它的理解难度越来越高。
第四部分:VAX架构是CISC架构，VAX指令集设计时的主要目标是：
（1）使指令集与编程语言尽量接近，以此简化编译器。
（2）为减小指令所占内存，VAX指令集中指令长度的可变。
因为VAX设计目的与MIPS不同，因此，最终的架构也就不同，在VAX于MIPS中，对于相同数据类型具有不同的名称。
第五部分：IBM360被提出时，首次使用计算机体系结构术语。IBM360的出现具有重大意义。它提出的目的是为了使相同软件在同一架构的不同机器上也能正常运行。显然，这是一个很正确的决定，并且为现代计算机的繁盛奠定了基础。同时，在IBM360架构中引入的几种标准一直使用到现在。

== Idea for improvement ==
开篇的Introduction可以对文章的内容进行大致概括。文章可以精简一部分。

== Lessons learned ==
从这篇论文中，我了解到了桌面/服务器RISC与嵌入式RISC的不同，并知道了几种代表性RISC的特有的指令集及功能。同时，每个指令集设计时都有各自的目的，不同目的驱使了不同指令集的诞生。在设计指令集时，应该首先考虑适用的场景以及主要目的，从而进行不同的权衡。
Paper review
学号：1160300527
  姓名：肖松      
== Paper summary ==
这篇论文对多种指令集进行了对比，从几个方面对各种桌面/服务器RISC指令集与嵌入式RISC指令集进行了对比，比如寻址模式，指令格式。然后对MIPS核心指令集，桌面/服务器RISC的多媒体扩展，嵌入式RISC的数字信号处理扩展等内容进行详细说明，介绍了MIPS核心的常见扩展以及10种指令集架构特有的功能，对另外3种架构进行了具体的介绍。最后叙述了指令集架构的发展趋势以及对未来发展趋势的预测。